//////////////////////////////////////////////////////
// Copyright (C) Microsoft. 2018. All rights reserved.
//////////////////////////////////////////////////////


// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "Core/PlayFabError.h"
#include "Core/PlayFabEventsDataModels.h"
#include "Core/PlayFabSettings.h"
#include "Interfaces/IHttpRequest.h"
#include "Interfaces/IHttpResponse.h"

namespace PlayFab
{
    class PLAYFABCPP_API UPlayFabEventsAPI
    {
    public:
        DECLARE_DELEGATE_OneParam(FWriteEventsDelegate, const EventsModels::FWriteEventsResponse&);
        DECLARE_DELEGATE_OneParam(FWriteTelemetryEventsDelegate, const EventsModels::FWriteEventsResponse&);

        UPlayFabEventsAPI();
        ~UPlayFabEventsAPI();

        int GetPendingCalls() const;
        FString GetBuildIdentifier() const;

        // ------------ Generated API calls
        // Write batches of entity based events to PlayStream. The namespace of the Event must be 'custom' or start with 'custom.'.
        bool WriteEvents(EventsModels::FWriteEventsRequest& request, const FWriteEventsDelegate& SuccessDelegate = FWriteEventsDelegate(), const FPlayFabErrorDelegate& ErrorDelegate = FPlayFabErrorDelegate());
        /**
         * Write batches of entity based events to as Telemetry events (bypass PlayStream). The namespace must be 'custom' or start
         * with 'custom.'
         */
        bool WriteTelemetryEvents(EventsModels::FWriteEventsRequest& request, const FWriteTelemetryEventsDelegate& SuccessDelegate = FWriteTelemetryEventsDelegate(), const FPlayFabErrorDelegate& ErrorDelegate = FPlayFabErrorDelegate());

    private:
        // ------------ Generated result handlers
        void OnWriteEventsResult(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FWriteEventsDelegate SuccessDelegate, FPlayFabErrorDelegate ErrorDelegate);
        void OnWriteTelemetryEventsResult(FHttpRequestPtr HttpRequest, FHttpResponsePtr HttpResponse, bool bSucceeded, FWriteTelemetryEventsDelegate SuccessDelegate, FPlayFabErrorDelegate ErrorDelegate);

    };
};
