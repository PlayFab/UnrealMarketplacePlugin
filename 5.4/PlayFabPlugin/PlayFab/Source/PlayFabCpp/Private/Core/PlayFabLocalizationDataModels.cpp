//////////////////////////////////////////////////////
// Copyright (C) Microsoft. 2018. All rights reserved.
//////////////////////////////////////////////////////


// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!

#include "Core/PlayFabLocalizationDataModels.h"
#include "Core/PlayFabJsonHelpers.h"

using namespace PlayFab;
using namespace PlayFab::LocalizationModels;

PlayFab::LocalizationModels::FGetLanguageListRequest::~FGetLanguageListRequest()
{

}

void PlayFab::LocalizationModels::FGetLanguageListRequest::writeJSON(JsonWriter& writer) const
{
    writer->WriteObjectStart();

    if (CustomTags.Num() != 0)
    {
        writer->WriteObjectStart(TEXT("CustomTags"));
        for (TMap<FString, FString>::TConstIterator It(CustomTags); It; ++It)
        {
            writer->WriteIdentifierPrefix((*It).Key);
            writer->WriteValue((*It).Value);
        }
        writer->WriteObjectEnd();
    }

    writer->WriteObjectEnd();
}

bool PlayFab::LocalizationModels::FGetLanguageListRequest::readFromValue(const TSharedPtr<FJsonObject>& obj)
{
    bool HasSucceeded = true;

    const TSharedPtr<FJsonObject>* CustomTagsObject;
    if (obj->TryGetObjectField(TEXT("CustomTags"), CustomTagsObject))
    {
        for (TMap<FString, TSharedPtr<FJsonValue>>::TConstIterator It((*CustomTagsObject)->Values); It; ++It)
        {
            CustomTags.Add(It.Key(), It.Value()->AsString());
        }
    }

    return HasSucceeded;
}

PlayFab::LocalizationModels::FGetLanguageListResponse::~FGetLanguageListResponse()
{

}

void PlayFab::LocalizationModels::FGetLanguageListResponse::writeJSON(JsonWriter& writer) const
{
    writer->WriteObjectStart();

    if (LanguageList.Num() != 0)
    {
        writer->WriteArrayStart(TEXT("LanguageList"));
        for (const FString& item : LanguageList)
            writer->WriteValue(item);
        writer->WriteArrayEnd();
    }


    writer->WriteObjectEnd();
}

bool PlayFab::LocalizationModels::FGetLanguageListResponse::readFromValue(const TSharedPtr<FJsonObject>& obj)
{
    bool HasSucceeded = true;

    obj->TryGetStringArrayField(TEXT("LanguageList"), LanguageList);

    return HasSucceeded;
}

